exercise: "05"
title: On/Off switch
solution: Ex05OnoffSwitch/OnoffSwitch.hs
issue: 5
intro: |
  <p>
    Write a server that exposes a <code>/onoff-switch</code> route.<br>
    The server will maintain the state of a switch. The state can either be "Off" or "On".
    The switch will start in the "Off" position. Everytime a request is sent, flip the
    switch and return the current state.

    <pre>
      POST /onoff-switch
      >>> expected "On"

      POST /onoff-switch
      >>> expected "Off"

      POST /onoff-switch
      >>> expected "On"
    </pre>
  </p>
  <p>
    You'll need a <code>StatefulHandler</code> for this exercise, so that state can be kept
    across requests. Read more on <a href="https://github.com/alpacaaa/zero-bullshit-haskell#toc-dealing-state">Dealing with mutable state</a>.
  </p>
